/* eslint-disable guard-for-in */
/* eslint-disable no-restricted-syntax */
/* eslint-disable class-methods-use-this */
/* eslint-disable no-underscore-dangle */
import UploadIcon from '@material-ui/icons/CloudUpload';
import React, { Component } from 'react';
import ReactDOM from 'react-dom';
import { imageProxy } from '../../../../../helpers/getImage';
import uploadFile from '../../../../../helpers/imageUpload';
import { asyncForEach } from '../../../../../helpers/utils';

function toArray(fileList) {
  return Array.prototype.slice.call(fileList);
}

class EasyGaleryUpload extends Component {
  constructor({ data, api }) {
    super({ data, api });
    this.api = api;
    this.settings = [
      {
        name: 'gallery',
        title: 'Gallery',
        icon:
          '<svg id="svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="16" height="16" viewBox="0, 0, 400,400"><g id="svgg"><path id="path0" d="M22.113 7.778 C 16.744 11.052,17.163 -2.122,17.381 156.616 L 17.578 300.218 20.580 302.648 L 23.582 305.078 198.315 305.274 C 391.830 305.492,377.092 305.844,378.599 300.972 C 378.831 300.223,379.346 298.999,379.745 298.253 C 380.182 297.434,380.469 240.576,380.469 154.803 L 380.469 12.711 378.837 10.637 C 375.125 5.917,388.780 6.250,198.672 6.253 C 27.520 6.256,24.568 6.281,22.113 7.778 M353.906 138.437 C 353.906 199.539,353.615 249.197,353.260 248.789 C 352.904 248.381,349.841 243.652,346.453 238.281 C 343.065 232.910,340.050 228.340,339.753 228.125 C 339.456 227.910,335.178 221.406,330.248 213.672 C 325.317 205.938,317.988 194.632,313.961 188.549 C 309.935 182.465,304.355 173.888,301.563 169.488 C 298.770 165.087,296.118 161.100,295.669 160.626 C 295.221 160.153,293.111 157.059,290.982 153.751 C 281.138 138.461,270.727 140.168,258.806 159.027 C 255.803 163.778,251.802 169.817,249.915 172.448 C 248.028 175.079,243.528 181.972,239.914 187.765 C 234.026 197.205,233.220 198.175,232.152 197.108 C 231.035 195.990,227.225 190.963,200.837 155.783 C 195.066 148.091,190.114 141.621,189.832 141.406 C 189.550 141.191,185.261 135.566,180.301 128.906 C 169.979 115.047,169.476 114.525,164.902 112.911 C 158.966 110.817,151.175 112.914,148.238 117.396 C 147.520 118.492,146.128 120.276,145.146 121.359 C 144.163 122.443,140.195 127.642,136.328 132.914 C 132.461 138.186,127.939 144.275,126.279 146.445 C 117.560 157.845,99.590 181.620,93.892 189.294 C 90.318 194.108,85.045 201.006,82.174 204.623 C 79.302 208.240,73.262 216.191,68.750 222.292 C 64.238 228.393,56.768 238.404,52.148 244.539 L 43.750 255.694 43.750 141.519 L 43.750 27.344 198.828 27.344 L 353.906 27.344 353.906 138.437 M100.603 71.527 C 94.117 74.904,92.442 81.941,96.911 87.031 C 104.994 96.237,121.102 91.971,121.091 80.627 C 121.082 71.759,109.791 66.744,100.603 71.527 M177.688 168.331 C 182.778 175.191,187.356 181.218,187.863 181.724 C 188.369 182.231,192.977 188.348,198.103 195.318 C 203.228 202.288,207.990 208.566,208.685 209.269 C 209.379 209.972,213.579 215.469,218.017 221.484 C 222.455 227.500,228.579 235.586,231.626 239.453 C 234.674 243.320,240.114 250.527,243.716 255.469 C 247.318 260.410,250.673 264.805,251.172 265.234 C 252.046 265.986,259.494 275.806,263.171 281.055 L 264.950 283.594 159.770 283.594 L 54.590 283.594 57.099 280.101 C 58.479 278.179,60.200 275.971,60.925 275.193 C 61.650 274.415,66.459 268.165,71.612 261.304 C 91.957 234.213,101.111 222.130,103.558 219.141 C 104.964 217.422,110.100 210.694,114.971 204.189 C 119.843 197.684,128.532 186.082,134.282 178.407 C 140.031 170.733,145.305 163.878,146.001 163.176 C 146.696 162.473,150.070 158.068,153.498 153.387 L 159.731 144.876 164.082 150.368 C 166.476 153.388,172.598 161.472,177.688 168.331 M285.251 192.383 C 289.695 199.365,293.865 205.703,294.517 206.467 C 295.169 207.230,299.775 214.344,304.751 222.275 C 309.728 230.207,314.354 237.316,315.032 238.075 C 315.710 238.833,320.496 246.133,325.667 254.297 C 330.839 262.461,335.372 269.492,335.740 269.922 C 336.993 271.381,344.531 282.740,344.531 283.168 C 344.531 283.402,333.862 283.594,320.821 283.594 L 297.111 283.594 285.860 268.646 C 279.672 260.425,270.650 248.384,265.811 241.888 C 260.971 235.393,256.576 229.551,256.044 228.906 C 255.511 228.262,253.783 226.147,252.204 224.208 L 249.333 220.681 252.205 216.788 C 253.785 214.647,259.121 206.507,264.063 198.700 C 272.012 186.140,276.397 179.688,276.984 179.688 C 277.087 179.688,280.808 185.400,285.251 192.383 M17.188 348.828 L 17.188 383.594 76.563 383.594 L 135.938 383.594 135.938 348.828 L 135.938 314.063 76.563 314.063 L 17.188 314.063 17.188 348.828 M138.281 348.828 L 138.281 383.594 197.656 383.594 L 257.031 383.594 257.031 348.828 L 257.031 314.063 197.656 314.063 L 138.281 314.063 138.281 348.828 M261.719 349.609 L 261.719 384.375 321.094 384.375 L 380.469 384.375 380.469 349.609 L 380.469 314.844 321.094 314.844 L 261.719 314.844 261.719 349.609 " stroke="none" fill-rule="evenodd"></path></g></svg>',
        default: true,
      },
      {
        name: 'masonry',
        title: 'Masonry',
        icon:
          '<svg id="svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="16" height="16" viewBox="0, 0, 400,400"><g id="svgg"><path id="path0" d="M0.000 61.719 L 0.000 123.438 92.188 123.438 L 184.375 123.438 184.375 61.719 L 184.375 0.000 92.188 0.000 L 0.000 0.000 0.000 61.719 M220.313 51.563 L 220.313 103.125 310.156 103.125 L 400.000 103.125 400.000 51.563 L 400.000 0.000 310.156 0.000 L 220.313 0.000 220.313 51.563 M224.219 267.969 L 224.219 400.000 312.109 400.000 L 400.000 400.000 400.000 267.969 L 400.000 135.938 312.109 135.938 L 224.219 135.938 224.219 267.969 M0.000 210.156 L 0.000 267.969 93.359 267.969 L 186.719 267.969 186.719 210.156 L 186.719 152.344 93.359 152.344 L 0.000 152.344 0.000 210.156 M0.000 348.047 L 0.000 400.000 93.750 400.000 L 187.500 400.000 187.500 348.047 L 187.500 296.094 93.750 296.094 L 0.000 296.094 0.000 348.047 " stroke="none" fill-rule="evenodd"></path></g></svg>',
        default: false,
      },
    ];
    this.data = {
      images: data,
      style: this.settings.find(tune => tune.default === true).name,
    };
  }

  get CSS() {
    return {
      baseBlock: this.api.styles.block,
      wrapper: 'cdx-list',
      wrapperOrdered: 'cdx-list--ordered',
      wrapperUnordered: 'cdx-list--unordered',
      item: 'cdx-list__item',
      settingsWrapper: 'cdx-list-settings',
      settingsButton: this.api.styles.settingsButton,
      settingsButtonActive: this.api.styles.settingsButtonActive,
    };
  }

  static get toolbox() {
    return {
      icon:
        '<svg id="svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="20" height="16" viewBox="0, 0, 400,352.96"><g id="svgg"><path id="path0" d="M76.880 8.722 C 70.969 9.486,62.466 11.586,58.362 13.296 C 57.723 13.562,56.228 14.177,55.040 14.661 C 53.009 15.490,50.887 16.543,47.102 18.602 C 45.224 19.623,40.807 22.510,38.978 23.913 C 38.283 24.445,37.193 25.276,36.554 25.760 C 32.656 28.715,26.402 34.956,23.318 38.970 C 22.841 39.591,22.301 40.275,22.117 40.490 C 21.393 41.338,19.616 43.879,18.153 46.160 C 10.673 57.815,6.361 69.751,4.367 84.320 C 4.026 86.813,3.826 228.537,4.158 232.720 C 4.550 237.662,5.977 245.464,7.208 249.396 C 7.478 250.256,8.023 252.004,8.420 253.280 C 8.817 254.556,9.208 255.708,9.289 255.840 C 9.369 255.972,9.535 256.296,9.657 256.560 C 10.725 258.869,11.642 260.576,12.043 261.006 C 12.307 261.289,12.856 261.915,13.262 262.397 C 14.878 264.318,20.265 269.745,21.503 270.702 C 21.801 270.932,22.682 271.665,23.462 272.331 C 24.242 272.997,25.132 273.717,25.440 273.931 C 25.748 274.145,26.324 274.576,26.720 274.889 C 27.858 275.788,29.610 277.024,30.730 277.718 C 34.920 280.311,36.213 281.069,37.160 281.489 C 37.754 281.752,38.240 282.029,38.240 282.104 C 38.240 282.179,38.384 282.240,38.560 282.240 C 38.880 282.240,38.880 282.133,38.880 176.240 C 38.880 117.940,38.938 70.240,39.008 70.240 C 39.079 70.240,39.228 69.508,39.340 68.614 C 40.231 61.471,44.233 53.305,49.505 47.870 C 53.586 43.663,59.006 40.343,64.417 38.738 L 65.555 38.400 199.177 38.400 C 315.962 38.400,332.800 38.371,332.800 38.167 C 332.800 38.039,332.485 37.589,332.099 37.167 C 331.713 36.745,330.752 35.680,329.962 34.800 C 322.873 26.901,312.064 18.980,303.361 15.308 C 298.732 13.354,297.738 12.953,296.240 12.431 C 292.821 11.239,286.799 9.787,281.680 8.921 L 279.600 8.569 179.040 8.542 C 97.627 8.520,78.175 8.554,76.880 8.722 M119.280 41.051 C 119.104 41.078,117.916 41.216,116.640 41.357 C 106.654 42.465,97.761 45.126,88.560 49.759 C 75.330 56.421,63.635 67.004,55.934 79.281 C 55.327 80.248,54.671 81.292,54.477 81.600 C 53.974 82.399,52.640 84.770,52.640 84.866 C 52.640 84.910,52.438 85.291,52.191 85.713 C 51.467 86.951,49.688 90.862,48.567 93.680 C 47.554 96.226,45.650 102.192,45.374 103.680 C 45.334 103.900,45.053 105.196,44.751 106.560 C 44.449 107.924,44.046 110.084,43.855 111.360 C 43.665 112.636,43.427 114.148,43.327 114.720 C 43.075 116.154,42.950 252.638,43.197 255.440 C 43.484 258.686,44.252 263.530,44.896 266.160 C 45.112 267.040,45.325 267.976,45.369 268.240 C 45.721 270.362,48.215 277.677,49.787 281.200 C 50.631 283.091,52.752 287.407,53.286 288.320 C 53.517 288.716,54.022 289.580,54.407 290.240 C 60.354 300.426,69.381 310.006,79.639 317.018 C 80.364 317.514,81.003 317.920,81.057 317.920 C 81.112 317.920,81.491 318.161,81.899 318.455 C 84.398 320.258,91.120 323.630,96.240 325.648 C 102.728 328.204,111.301 330.192,118.800 330.879 C 121.232 331.101,317.968 331.101,320.400 330.879 C 327.899 330.192,336.472 328.204,342.960 325.648 C 348.080 323.630,354.802 320.258,357.301 318.455 C 357.709 318.161,358.088 317.920,358.143 317.920 C 358.197 317.920,358.836 317.514,359.561 317.018 C 369.825 310.002,378.843 300.432,384.793 290.240 C 385.178 289.580,385.683 288.716,385.914 288.320 C 386.448 287.407,388.569 283.091,389.413 281.200 C 390.985 277.677,393.479 270.362,393.831 268.240 C 393.875 267.976,394.088 267.040,394.304 266.160 C 394.948 263.530,395.716 258.686,396.003 255.440 C 396.250 252.638,396.125 116.154,395.873 114.720 C 395.773 114.148,395.535 112.636,395.345 111.360 C 395.154 110.084,394.751 107.924,394.449 106.560 C 394.147 105.196,393.866 103.900,393.826 103.680 C 393.550 102.192,391.646 96.226,390.633 93.680 C 389.512 90.862,387.733 86.951,387.009 85.713 C 386.762 85.291,386.560 84.910,386.560 84.866 C 386.560 84.770,385.226 82.399,384.723 81.600 C 384.529 81.292,383.873 80.248,383.266 79.281 C 370.902 59.570,348.200 44.717,325.920 41.762 C 325.260 41.674,323.856 41.478,322.800 41.326 C 321.083 41.078,120.881 40.808,119.280 41.051 M314.880 88.479 C 330.284 89.405,342.682 99.082,347.168 113.680 C 348.860 119.188,348.818 117.935,348.765 161.250 L 348.720 198.581 346.400 196.863 C 345.124 195.919,343.576 194.776,342.960 194.323 C 341.049 192.917,338.865 191.312,337.284 190.152 C 336.450 189.541,335.281 188.680,334.686 188.240 C 334.091 187.800,332.917 186.936,332.077 186.320 C 331.237 185.704,330.065 184.840,329.471 184.400 C 328.878 183.960,327.360 182.844,326.098 181.920 C 323.376 179.927,321.334 178.426,318.400 176.259 C 317.212 175.382,315.736 174.294,315.120 173.842 C 312.534 171.944,311.457 171.154,310.360 170.349 C 309.722 169.882,308.480 168.964,307.600 168.311 C 306.720 167.657,305.780 166.972,305.510 166.787 L 305.021 166.451 304.150 166.874 C 303.218 167.327,299.791 169.087,288.480 174.921 C 285.605 176.404,281.432 178.547,276.800 180.920 C 275.172 181.754,272.616 183.068,271.120 183.840 C 269.624 184.611,267.176 185.872,265.680 186.641 C 264.184 187.410,261.484 188.799,259.680 189.728 C 252.955 193.191,248.673 195.390,247.083 196.195 L 245.445 197.025 245.003 196.617 C 244.759 196.393,241.968 193.915,238.800 191.110 C 235.632 188.305,232.752 185.748,232.400 185.428 C 230.651 183.838,224.969 178.765,220.301 174.627 C 213.654 168.733,196.425 153.403,196.320 153.287 C 196.276 153.239,195.556 152.588,194.720 151.840 C 193.884 151.092,193.122 150.408,193.027 150.320 C 192.932 150.232,190.739 148.288,188.154 146.000 C 183.945 142.274,181.117 139.755,177.217 136.254 C 176.523 135.630,175.803 134.989,175.617 134.828 C 175.432 134.667,175.064 134.340,174.800 134.101 C 174.536 133.862,171.980 131.588,169.120 129.049 C 166.260 126.509,163.352 123.921,162.657 123.296 C 161.963 122.671,161.279 122.079,161.137 121.981 C 160.927 121.835,160.451 122.085,158.551 123.341 C 157.271 124.187,154.571 125.967,152.551 127.296 C 150.532 128.625,147.692 130.497,146.240 131.456 C 144.788 132.415,143.528 133.236,143.440 133.280 C 143.352 133.324,141.768 134.362,139.920 135.586 C 136.226 138.033,131.940 140.857,128.240 143.280 C 126.920 144.145,124.076 146.016,121.920 147.438 C 119.764 148.860,117.100 150.610,116.000 151.326 C 114.900 152.043,113.676 152.851,113.280 153.122 C 112.884 153.393,111.658 154.206,110.556 154.927 C 104.469 158.914,95.583 164.757,92.240 166.972 L 90.480 168.139 90.434 146.029 C 90.380 119.677,90.417 118.937,92.032 113.680 C 96.470 99.237,108.991 89.370,124.000 88.487 C 127.011 88.310,311.939 88.302,314.880 88.479 M161.776 184.027 C 162.532 184.672,164.506 186.316,166.163 187.680 C 167.820 189.044,169.512 190.448,169.924 190.800 C 170.336 191.152,171.378 192.016,172.238 192.720 C 173.738 193.946,174.919 194.924,177.360 196.958 C 177.976 197.471,179.848 199.019,181.520 200.399 C 183.192 201.779,185.001 203.279,185.540 203.734 C 186.080 204.188,187.221 205.136,188.077 205.840 C 189.942 207.373,194.358 211.028,195.920 212.330 C 198.614 214.578,204.229 219.233,205.748 220.480 C 206.659 221.228,208.574 222.812,210.002 224.000 C 211.430 225.188,213.953 227.276,215.607 228.640 C 217.261 230.004,218.949 231.408,219.357 231.760 C 219.765 232.112,220.809 232.976,221.676 233.680 C 222.543 234.384,223.806 235.428,224.482 236.000 C 225.158 236.572,227.068 238.156,228.727 239.520 C 230.386 240.884,232.078 242.288,232.488 242.640 C 232.898 242.992,233.938 243.856,234.798 244.560 C 235.659 245.264,236.880 246.272,237.511 246.800 C 241.553 250.182,244.700 252.727,244.894 252.772 C 245.018 252.800,245.543 252.566,246.061 252.252 C 246.578 251.937,247.044 251.680,247.096 251.680 C 247.149 251.680,249.263 250.574,251.796 249.222 C 258.319 245.739,259.132 245.306,260.480 244.594 C 261.140 244.245,262.292 243.635,263.040 243.239 C 263.788 242.842,264.904 242.250,265.520 241.924 C 266.136 241.597,267.360 240.950,268.240 240.485 C 269.120 240.020,270.884 239.082,272.160 238.400 C 273.436 237.719,275.092 236.837,275.840 236.442 C 276.588 236.046,277.740 235.435,278.400 235.083 C 280.282 234.080,282.352 232.985,283.920 232.163 C 285.465 231.354,294.939 226.328,295.394 226.076 C 295.545 225.993,296.193 225.646,296.834 225.305 C 297.475 224.965,298.504 224.415,299.120 224.083 C 299.736 223.751,301.104 223.029,302.160 222.479 L 304.080 221.478 306.160 222.991 C 307.304 223.824,308.996 225.039,309.920 225.691 C 312.501 227.515,314.453 228.908,319.543 232.560 C 322.118 234.408,324.387 236.028,324.585 236.160 C 324.783 236.292,327.652 238.344,330.962 240.720 C 334.272 243.096,337.691 245.544,338.561 246.160 C 347.287 252.341,348.339 253.147,348.253 253.580 C 348.207 253.811,348.054 254.634,347.913 255.408 C 345.550 268.427,333.507 280.473,320.538 282.790 C 315.607 283.671,324.464 283.600,219.600 283.600 C 114.736 283.600,123.593 283.671,118.662 282.790 C 108.982 281.061,99.309 273.695,94.512 264.400 C 90.852 257.308,90.402 254.225,90.407 236.320 L 90.411 224.080 91.645 223.378 C 92.324 222.991,93.312 222.407,93.840 222.079 C 94.762 221.507,101.959 217.209,102.957 216.635 C 103.223 216.482,104.124 215.943,104.960 215.436 C 105.796 214.929,106.696 214.392,106.960 214.241 C 107.528 213.919,118.440 207.396,119.600 206.686 C 120.040 206.417,121.012 205.832,121.760 205.387 C 122.508 204.942,124.344 203.844,125.840 202.948 C 127.336 202.052,128.812 201.175,129.120 201.000 C 129.428 200.824,130.463 200.204,131.421 199.620 C 132.378 199.037,133.189 198.560,133.223 198.560 C 133.257 198.560,133.662 198.320,134.122 198.027 C 135.011 197.461,136.404 196.617,137.200 196.162 C 137.829 195.802,144.808 191.637,145.840 191.005 C 146.280 190.736,147.252 190.157,148.000 189.719 C 148.748 189.281,149.792 188.653,150.320 188.323 C 151.264 187.733,158.502 183.410,159.440 182.875 C 160.026 182.541,160.046 182.551,161.776 184.027 " stroke="none" fill-rule="evenodd"></path></g></svg>',
      title: 'Image Gallery',
    };
  }

  async uploadFiles(files) {
    let newImg = this.data.images;
    if (typeof newImg[0] === 'undefined') newImg = [];
    const output = document.getElementById('result');

    await asyncForEach(toArray(files), async file => {
      const loader = document.createElement('div');
      loader.classList.add('col-4');
      loader.innerHTML = `<div class="spinner-border text-secondary m-5" height="50" width="50" />`;
      output.insertBefore(loader, null);

      uploadFile(file, {}).then(res => {
        newImg.push(res);
        const div = document.createElement('div');
        div.classList.add('col-4');
        div.classList.add('p-1');

        div.innerHTML = `<img class="img-fluid" src="${imageProxy(
          res.url,
          300,
        )}"/>`;

        output.insertBefore(div, null);
        loader.parentNode.removeChild(loader);
      });
    });
    this.data.images = newImg;
  }

  save() {
    return Object.assign(this.data, {
      images: this.data.images,
    });
  }

  /**
   * Toggles List style
   * @param {string} style - 'ordered'|'unordered'
   */
  toggleTune(style) {
    this.data.style = style;
  }

  /**
   * Helper for making Elements with attributes
   *
   * @param  {string} tagName           - new Element tag name
   * @param  {array|string} classNames  - list or name of CSS classname(s)
   * @param  {Object} attributes        - any attributes
   * @return {Element}
   */
  _make(tagName, classNames = null, attributes = {}) {
    const el = document.createElement(tagName);

    if (Array.isArray(classNames)) {
      el.classList.add(...classNames);
    } else if (classNames) {
      el.classList.add(classNames);
    }

    for (const attrName in attributes) {
      el[attrName] = attributes[attrName];
    }

    return el;
  }

  renderSettings() {
    const wrapper = this._make('div', [this.CSS.settingsWrapper], {});

    this.settings.forEach(item => {
      const itemEl = this._make('div', this.CSS.settingsButton, {
        innerHTML: item.icon,
      });

      itemEl.addEventListener('click', () => {
        this.toggleTune(item.name);

        // clear other buttons
        const buttons = itemEl.parentNode.querySelectorAll(
          // eslint-disable-next-line prefer-template
          '.' + this.CSS.settingsButton,
        );

        Array.from(buttons).forEach(button =>
          button.classList.remove(this.CSS.settingsButtonActive),
        );

        // mark active
        itemEl.classList.toggle(this.CSS.settingsButtonActive);
      });

      if (this.data.style === item.name) {
        itemEl.classList.add(this.CSS.settingsButtonActive);
      }

      wrapper.appendChild(itemEl);
    });

    return wrapper;
  }

  render() {
    const div = document.createElement('DIV');

    ReactDOM.render(
      <>
        <label
          htmlFor="fileUpload"
          className="cpointer btn btn-primary btn-block rounded-pill shadow"
        >
          <UploadIcon />
          <span className="pl-2">Click to upload images</span>
          <input
            multiple
            id="fileUpload"
            type="file"
            accept="image/*"
            className="d-none"
            onChange={event => this.uploadFiles(event.target.files)}
          />
        </label>
        <div className="container pt-2">
          <div id="result" className="row" />
        </div>
      </>,
      div,
    );

    return div;
  }
}

export default EasyGaleryUpload;
